version: '2'
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    $ref: "#/messages/template.description"
  header: '![](toolchain.svg?localize)'
  icon: icon.svg
  required:
    - ui-build
    - catalog-api-build
    - orders-api-build
    - catalog-api-repo
    - orders-api-repo
    - ui-repo
  info:
    git url: >-
      [https://github.com/open-toolchain/toolchain-demo](https://github.com/open-toolchain/toolchain-demo)
    git branch: '[master](https://github.com/open-toolchain/toolchain-demo/tree/master)'
toolchain:
  name: 'toolchain-demo-{{timestamp}}'
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted"
services:
  orders-api-build:
    service_id: pipeline
    parameters:
      services:
        - orders-api-repo
        - test
      name: 'orders-api-{{toolchain.name}}'
      configuration:
        content:
          $text: order-api.pipeline.yml
        env:
          DEV_REGION_ID: '{{form.pipeline.parameters.dev-region}}'
          SAUCE_LABS: test
          LOGICAL_APP_NAME: Store Orders API
          CF_APP_NAME: '{{form.pipeline.parameters.orders-app-name}}'
          DEV_SPACE_NAME: '{{form.pipeline.parameters.dev-space}}'
          DEV_ORG_NAME: '{{form.pipeline.parameters.dev-organization}}'
          ORDER_API_REPO: orders-api-repo
          QA_SPACE_NAME: '{{form.pipeline.parameters.qa-space}}'
          QA_ORG_NAME: '{{form.pipeline.parameters.qa-organization}}'
          QA_REGION_ID: '{{form.pipeline.parameters.qa-region}}'
          PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
        execute: true
  catalog-api-repo:
    service_id: githubpublic
    parameters:
      repo_name: '{{form.githubpublic.parameters.catalog-api-repo_name}}'
      repo_url: '{{form.githubpublic.parameters.catalog-api-repo_url}}'
      type: clone
      has_issues: false
      enable_traceability: true
  ui-repo:
    service_id: githubpublic
    parameters:
      repo_name: '{{form.githubpublic.parameters.ui-repo_name}}'
      repo_url: '{{form.githubpublic.parameters.ui-repo_url}}'
      type: clone
      has_issues: true
      enable_traceability: true
  ui-build:
    service_id: pipeline
    parameters:
      services:
        - ui-repo
        - test
      name: 'ui-{{toolchain.name}}'
      ui-pipeline: true
      configuration:
        content:
          $text: ui.pipeline.yml
        env:
          DEV_REGION_ID: '{{form.pipeline.parameters.dev-region}}'
          SAUCE_LABS: test
          LOGICAL_APP_NAME: Store UI
          CF_APP_NAME: '{{form.pipeline.parameters.ui-app-name}}'
          DEV_SPACE_NAME: '{{form.pipeline.parameters.dev-space}}'
          DEV_ORG_NAME: '{{form.pipeline.parameters.dev-organization}}'
          UI_REPO: ui-repo
          QA_SPACE_NAME: '{{form.pipeline.parameters.qa-space}}'
          QA_ORG_NAME: '{{form.pipeline.parameters.qa-organization}}'
          QA_REGION_ID: '{{form.pipeline.parameters.qa-region}}'
          PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
        execute: true
  catalog-api-build:
    service_id: pipeline
    parameters:
      services:
        - catalog-api-repo
        - test
      name: 'catalog-api-{{toolchain.name}}'
      configuration:
        content:
          $text: catalog-api.pipeline.yml
        env:
          DEV_REGION_ID: '{{form.pipeline.parameters.dev-region}}'
          SAUCE_LABS: test
          LOGICAL_APP_NAME: Store Catalog API
          CF_APP_NAME: '{{form.pipeline.parameters.catalog-app-name}}'
          DEV_SPACE_NAME: '{{form.pipeline.parameters.dev-space}}'
          DEV_ORG_NAME: '{{form.pipeline.parameters.dev-organization}}'
          CATALOG_API_REPO: catalog-api-repo
          QA_SPACE_NAME: '{{form.pipeline.parameters.qa-space}}'
          QA_ORG_NAME: '{{form.pipeline.parameters.qa-organization}}'
          QA_REGION_ID: '{{form.pipeline.parameters.qa-region}}'
          PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
        execute: true
  orders-api-repo:
    service_id: githubpublic
    parameters:
      repo_name: '{{form.githubpublic.parameters.orders-api-repo_name}}'
      repo_url: '{{form.githubpublic.parameters.orders-api-repo_url}}'
      type: clone
      has_issues: false
      enable_traceability: true
  messaging:
    service_id: slack
    $ref: slack.yml
  dra:
    service_id: draservicebroker
    $ref: dra.yml
  test:
    service_id: saucelabs
    $ref: saucelabs.yml
  alerting:
    service_id: pagerduty
    $ref: pagerduty.yml
  webide:
    service_id: orion
form:
  pipeline:
    parameters:
      dev-space: dev
      qa-space: qa
      prod-space: prod
      orders-app-name: '{{services.orders-api-repo.parameters.repo_name}}'
      catalog-app-name: '{{services.catalog-api-repo.parameters.repo_name}}'
      ui-app-name: '{{services.ui-repo.parameters.repo_name}}'
    schema:
      $ref: deploy.json
  githubpublic:
    parameters:
      catalog-api-repo_name: 'catalog-api-{{toolchain.name}}'
      catalog-api-repo_url: 'https://github.com/open-toolchain/Microservices_CatalogAPI'
      orders-api-repo_name: 'orders-api-{{toolchain.name}}'
      orders-api-repo_url: 'https://github.com/open-toolchain/Microservices_OrdersAPI'
      ui-repo_name: 'ui-{{toolchain.name}}'
      ui-repo_url: 'https://github.com/open-toolchain/Microservices_UI'
    schema:
      $ref: github.json
