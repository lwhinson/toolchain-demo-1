---
template.name: "Chaîne d'outils de microservices avec DevOps Insights"
template.description: "Cette chaîne d'outils native du cloud permet de construire, à partir d'un exemple, un magasin en ligne comprenant trois microservices : une API Catalog, une API Orders et une interface graphique qui appelle les deux API. Cette chaîne d'outils est préconfigurée pour la distribution continue, le contrôle des sources, les tests fonctionnels, le suivi des problèmes, l'édition en ligne et la notification d'alerte.\n\nLes API Catalog et Orders sont sauvegardées par un magasin Cloudant. Au cours du déploiement de cette application, une instance de service Cloudant gratuite est créée. Pour plus d'informations et pour obtenir les dispositions applicables, consultez le [catalogue Bluemix](https://console.ng.bluemix.net/catalog/services/cloudant-nosql-db/).\n\nCette chaîne d'outils utilise des outils qui font partie du service Continuous Delivery. Si aucune instance de ce service n'existe dans l'organisation sélectionnée, elle est automatiquement ajoutée, lorsque vous cliquez sur **Créer**, avec le plan gratuit [Lite](/catalog/services/continuous-delivery/) sélectionné.\n\nPour commencer, cliquez sur **Créer**."
template.gettingStarted: "**Votre chaîne d'outils est prête !**\n**Démarrage rapide :** validez une modification dans un référentiel Git afin de déclencher une nouvelle génération et un nouveau déploiement de l'un des microservices. Les résultats s'affichent dans le tableau de bord Deployment Risk de DevOps Insights.\nPour obtenir des instructions étape par étape, reportez-vous au [tutoriel](https://www.ibm.com/devops/method/tutorials/tutorial_toolchain_microservices?task=3) relatif à cette chaîne d'outils."
deploy.title: "Etape de déploiement de microservices"
deploy.description: "Schéma de la constitution de microservices - Démo de février"
deploy.longDescription: "Delivery Pipeline automatise le déploiement en continu."
deploy.appName1: "Nom de l'appli Orders"
deploy.appName2: "Nom de l'appli Catalog"
deploy.appName3: "Nom de l'appli UI"
deploy.appDescription1: "Nom de l'appli pour l'API Orders"
deploy.appDescription2: "Nom de l'appli pour l'API Catalog"
deploy.appDescription3: "Nom de l'appli de l'interface utilisateur qui appelle les API Orders et Catalog"
region: "Région"
organization: "Organisation"
space: "Espace"
devStage: "Etape de développement"
prodStage: "Etape de production"
testStage: "Etape de test"
github.title: "Etape de déploiement de microservices"
github.description: "Schéma GitHub de microservices - Démo de février"
github.longDescription: "GitHub permet de stocker le code source dans un référentiel GitHub nouveau ou existant."
github.sourceRepository: "Référentiel source"
github.targetRepository: "Référentiel cible"
headerSVG.issueTracker: "SUIVI DE PROBLEME"
headerSVG.think: "PENSER"
headerSVG.code: "CODER"
headerSVG.deliver: "DISTRIBUER"
headerSVG.run: "EXECUTER"
headerSVG.learn: "APPRENDRE"
headerSVG.manage: "GERER"
headerSVG.culture: "CULTURE"
headerSVG.repository1: "REFERENTIEL"
headerSVG.repository2: "REFERENTIEL"
rheaderSVG.repository3: "REFERENTIEL"
headerSVG.gitHub1: "GitHub"
headerSVG.gitHub2: "GitHub"
headerSVG.gitHub3: "GitHub"
headerSVG.gitHub4: "GitHub"
headerSVG.pipeline1: "PIPELINE"
headerSVG.pipeline2: "PIPELINE"
headerSVG.pipeline3: "PIPELINE"
headerSVG.bluemix: "BLUEMIX"
headerSVG.webIde: "IDE WEB"
headerSVG.slack: "SLACK"
headerSVG.saucelabs1: "SAUCE LABS"
headerSVG.saucelabs2: "SAUCE LABS"
headerSVG.saucelabs3: "SAUCE LABS"
headerSVG.pagerDuty: "PAGER DUTY"
headerSVG.devops: "DEVOPS"
headerSVG.insights: "INSIGHTS"
